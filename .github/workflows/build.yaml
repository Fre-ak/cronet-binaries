name: macOS arm64 Build

on:
  push:
    branches:
      - main
  release:
    types:
      - created

jobs:
  cache-toolchains-mac:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            src/third_party/llvm-build/Release+Asserts/
            src/chrome/build/pgo_profiles/chrome-mac-*
            src/gn/
          key: toolchains-pgo-mac-${{ hashFiles('CHROMIUM_VERSION') }}-v${{ env.CACHE_EPOCH }}
      - id: ccache-timestamp
        run: echo "CCACHE_TIMESTAMP=$(date +%s)" >>$GITHUB_OUTPUT
      - name: Cache ccache files
        uses: actions/cache@v3
        with:
          path: ~/Library/Caches/ccache
          key: ccache-mac-${{ matrix.arch }}-${{ hashFiles('CHROMIUM_VERSION') }}-${{ steps.ccache-timestamp.outputs.CCACHE_TIMESTAMP }}
          restore-keys: ccache-mac-${{ matrix.arch }}-${{ hashFiles('CHROMIUM_VERSION') }}-
      - run: brew install ninja ccache
      - run: pip install setuptools
      - run: ./get-clang.sh
      - run: ccache -z
      - run: ./build.sh
      - run: ccache -s
      - name: Pack assets
        run: |
          mv out/Release/cronet ${{ env.BUNDLE }}
          tar cJf ${{ env.BUNDLE }}.tar.xz ${{ env.BUNDLE }}
          openssl sha256 ${{ env.BUNDLE }}.tar.xz >sha256sum.txt
          echo "SHA256SUM=$(cut -d' ' -f2 sha256sum.txt)" >>$GITHUB_ENV
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BUNDLE }}.tar.xz binaries sha256 ${{ env.SHA256SUM }}
          path: src/sha256sum.txt
      - name: Upload assets
        if: ${{ github.event_name == 'release' }}
        run: gh release upload "${GITHUB_REF##*/}" ${{ env.BUNDLE }}.tar.xz --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  mac:
    needs: cache-toolchains-mac
    runs-on: macos-11
    strategy:
      fail-fast: false
      matrix:
        arch: [arm64]
    env:
      EXTRA_FLAGS: 'target_cpu="${{ matrix.arch }}"'
      BUNDLE: cronet-${{ github.event.release.tag_name }}-${{ github.job }}-${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v4
      - name: Cache toolchains and PGO
        uses: actions/cache@v3
        with:
          path: |
            src/third_party/llvm-build/Release+Asserts/
            src/chrome/build/pgo_profiles/chrome-mac-*
            src/gn/
          key: toolchains-pgo-mac-${{ hashFiles('CHROMIUM_VERSION') }}-v${{ env.CACHE_EPOCH }}
      - id: ccache-timestamp
        run: echo "CCACHE_TIMESTAMP=$(date +%s)" >>$GITHUB_OUTPUT
      - name: Cache ccache files
        uses: actions/cache@v3
        with:
          path: ~/Library/Caches/ccache
          key: ccache-mac-${{ matrix.arch }}-${{ hashFiles('CHROMIUM_VERSION') }}-${{ steps.ccache-timestamp.outputs.CCACHE_TIMESTAMP }}
          restore-keys: ccache-mac-${{ matrix.arch }}-${{ hashFiles('CHROMIUM_VERSION') }}-
      - run: brew install ninja ccache
      - run: pip install setuptools
      - run: ./get-clang.sh
      - run: ccache -z
      - run: ./build.sh
      - run: ccache -s
      - name: Pack assets
        run: |
          mv out/Release/cronet ${{ env.BUNDLE }}
          tar cJf ${{ env.BUNDLE }}.tar.xz ${{ env.BUNDLE }}
          openssl sha256 ${{ env.BUNDLE }}.tar.xz >sha256sum.txt
          echo "SHA256SUM=$(cut -d' ' -f2 sha256sum.txt)" >>$GITHUB_ENV
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BUNDLE }}.tar.xz binaries sha256 ${{ env.SHA256SUM }}
          path: src/sha256sum.txt
      - name: Upload assets
        if: ${{ github.event_name == 'release' }}
        run: gh release upload "${GITHUB_REF##*/}" ${{ env.BUNDLE }}.tar.xz --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
